name: ocap-with-starrocks

networks:
  overlay:
    driver: bridge
  starrocks_net:
    ipam:
      config:
        - subnet: 172.20.80.0/16
volumes:
  postgres_data:

services:
  starrocks:
    # image: starrocks/allin1-ubuntu:2.5.4
    build:
      context: ./starrocks
    container_name: ocap-starrocks
    hostname: "fe"
    ports:
      - 8030:8030
      - 9030:9030
      - 8040:8040
    volumes:
      - ./volumes/starrocks/fe/meta:/opt/apache-doris/fe/meta
      - ./volumes/starrocks/fe/log:/data/deploy/starrocks/fe/log
      - ./volumes/starrocks/be/storage:/data/deploy/starrocks/be/storage
      - ./volumes/starrocks/be/log:/data/deploy/starrocks/be/log
      - ./starrocks/initdb.d/:/docker-entrypoint-initdb.d/
    networks:
      - starrocks_net
  db:
    image: pgvector/pgvector:pg12
    container_name: ocap-db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-root}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "psql postgres://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@localhost:5432/$${POSTGRES_DB} || exit 1",
        ]
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb.d/:/docker-entrypoint-initdb.d/:ro
    networks:
      - overlay
  redis:
    image: redis/redis-stack:latest
    container_name: ocap-redis
    restart: unless-stopped
    ports:
      # - "6379:6379"
      - 8001:8001
    environment:
      REDIS_ARGS: "--requirepass ${REDIS_PASSWORD:-}"
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    networks:
      - overlay
  olap:
    image: registry.cn-hangzhou.aliyuncs.com/metad/ocap-olap:main
    restart: unless-stopped
    healthcheck:
      test: curl -m 5 --silent --fail --request GET http://localhost:8080/ | jq --exit-status -n 'inputs | if has("status") then .status=="UP" else false end' > /dev/null || exit 1
      interval: 10s
      timeout: 2s
      retries: 10
    links:
      - db:${DB_HOST:-db}
    environment:
      REDIS_DATABASE: 1
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    networks:
      - overlay
      - starrocks_net
  api:
    image: registry.cn-hangzhou.aliyuncs.com/metad/ocap-api:main
    container_name: ocap-api
    environment:
      INSTALLATION_MODE: with-starrocks
      HOST: ${API_HOST:-api}
      PORT: 3000
      NODE_ENV: ${NODE_ENV:-development}
      DB_HOST: db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      OLAP_HOST: olap
      OLAP_PORT: 8080
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
      DEMO: ${DEMO:-true}
      STARROCKS_VERSION: 2.5
      STARROCKS_HOST: ${STARROCKS_HOST:-ocap-starrocks}
      STARROCKS_PORT: ${STARROCKS_PORT:-9030}
      STARROCKS_USER: ${STARROCKS_USER:-root}
      STARROCKS_PASS: ${STARROCKS_PASS:-}
      STARROCKS_DATABASE: ${STARROCKS_DATABASE:-demo}
      STARROCKS_API_PORT: ${STARROCKS_API_PORT:-8040}
      SENTRY_DSN: ${SENTRY_DSN:-}
      LOGGER_LEVEL: ${LOGGER_LEVEL:-info}
    env_file:
      - .env
    command: ["node", "main.js"]
    restart: on-failure
    depends_on:
      - db
      - redis
    links:
      - db:${DB_HOST:-db}
    ports:
      - ${API_PORT:-3000}:3000
    volumes:
      - ./volumes/api/public:/srv/pangolin/public
    networks:
      - overlay
      - starrocks_net
  webapp:
    image: registry.cn-hangzhou.aliyuncs.com/metad/ocap-webapp:main
    container_name: ocap-webapp
    environment:
      HOST: ${WEB_HOST:-webapp}
      NODE_ENV: ${NODE_ENV:-development}
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
      CLIENT_BASE_URL: ${CLIENT_BASE_URL:-http://localhost:4200}
      SENTRY_DSN: ${SENTRY_DSN:-}
      DEFAULT_LATITUDE: ${DEFAULT_LATITUDE:-42.6459136}
      DEFAULT_LONGITUDE: ${DEFAULT_LONGITUDE:-23.3332736}
      DEFAULT_CURRENCY: ${DEFAULT_CURRENCY:-USD}
      API_HOST: ${API_HOST:-api}
      API_PORT: ${API_PORT:-3000}
      ENABLE_LOCAL_AGENT: false
    env_file:
      - .env
    restart: on-failure
    links:
      - api:${API_HOST:-api}
    depends_on:
      - api
    ports:
      - ${WEBAPP_PORT:-80}:80
    networks:
      - overlay
