name: ocap-standalone

networks:
  overlay:
    driver: bridge
volumes:
  postgres_data:

services:
  db:
    image: registry.cn-hangzhou.aliyuncs.com/metad/pgvector:pg12
    container_name: ocap-db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-root}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "psql postgres://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@localhost:5432/$${POSTGRES_DB} || exit 1",
        ]
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb.d/:/docker-entrypoint-initdb.d/:ro
    networks:
      - overlay
  redis:
    image: registry.cn-hangzhou.aliyuncs.com/metad/redis-stack:6.2.6-v15-x86_64
    container_name: ocap-redis
    restart: unless-stopped
    ports:
      # - 6379:6379
      - 8001:8001
    environment:
      REDIS_ARGS: "--requirepass ${REDIS_PASSWORD:-}"
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    networks:
      - overlay
  adminer:
    image: registry.cn-hangzhou.aliyuncs.com/metad/adminer:4
    restart: always
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: ${DB_HOST:-db}
      ADMINER_DEFAULT_DB_NAME: ${DB_NAME:-postgres}
      ADMINER_DEFAULT_DB_PASSWORD: ${DB_PASS:-root}
    networks:
      - overlay
  olap:
    image: registry.cn-hangzhou.aliyuncs.com/metad/ocap-olap:main
    deploy:
      replicas: 3
    restart: unless-stopped
    healthcheck:
      test: curl -m 15 --silent --fail --request GET http://localhost:8080/ | jq --exit-status -n 'inputs | if has("status") then .status=="UP" else false end' > /dev/null || exit 1
      interval: 60s
      timeout: 10s
      retries: 10
    links:
      - db:${DB_HOST:-db}
    environment:
      REDIS_DATABASE: 1
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    networks:
      - overlay
  api:
    image: registry.cn-hangzhou.aliyuncs.com/metad/ocap-api:main
    container_name: ocap-api
    environment:
      INSTALLATION_MODE: ${INSTALLATION_MODE:-standalone}
      HOST: ${API_HOST:-api}
      PORT: 3000
      NODE_ENV: ${NODE_ENV:-development}
      DB_HOST: db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      OLAP_HOST: olap
      OLAP_PORT: 8080
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
      DEMO: ${DEMO:-false}
      SENTRY_DSN: ${SENTRY_DSN:-}
      LOGGER_LEVEL: ${LOGGER_LEVEL:-info}
    env_file:
      - .env
    command: ["node", "main.js"]
    restart: on-failure
    depends_on:
      - db
      - redis
    links:
      - db:${DB_HOST:-db}
    volumes:
      - ./volumes/api/public:/srv/pangolin/public
    networks:
      - overlay
  webapp:
    image: registry.cn-hangzhou.aliyuncs.com/metad/ocap-webapp:main
    container_name: ocap-webapp
    environment:
      HOST: ${WEB_HOST:-webapp}
      NODE_ENV: ${NODE_ENV:-development}
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
      CLIENT_BASE_URL: ${CLIENT_BASE_URL:-http://localhost:4200}
      SENTRY_DSN: ${SENTRY_DSN:-}
      DEFAULT_LATITUDE: ${DEFAULT_LATITUDE:-42.6459136}
      DEFAULT_LONGITUDE: ${DEFAULT_LONGITUDE:-23.3332736}
      DEFAULT_CURRENCY: ${DEFAULT_CURRENCY:-USD}
      API_HOST: ${API_HOST:-api}
      API_PORT: ${API_PORT:-3000}
      ENABLE_LOCAL_AGENT: false
    env_file:
      - .env
    # entrypoint: './entrypoint.compose.sh'
    command: ['nginx', '-g', 'daemon off;']
    # command: ['nginx', '-g', 'daemon off;', '-c', '/webapp/conf/nginx.conf']
    restart: on-failure
    links:
      - api:${API_HOST:-api}
    depends_on:
      - api
    volumes:
      - ./volumes/webapp/:/webapp/
    networks:
      - overlay
  website:
    image: registry.cn-hangzhou.aliyuncs.com/metad/website:2.4.0
    restart: on-failure
    networks:
      - overlay
  nginx:
    image: registry.cn-hangzhou.aliyuncs.com/metad/nginx:1.27.0
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - website
      - webapp
      - api
    networks:
      - overlay