apiVersion: v1
kind: Service
metadata:
  name: ocap-api-lb
spec:
  type: ClusterIP
  selector:
    app: ocap-api
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: ocap-olap
spec:
  type: ClusterIP
  selector:
    app: ocap-olap
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: ocap-webapp-lb
spec:
  type: ClusterIP
  selector:
    app: ocap-webapp
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ocap-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ocap-api
  template:
    metadata:
      labels:
        app: ocap-api
    spec:
      containers:
        - name: ocap-api
          image: registry.cn-hangzhou.aliyuncs.com/metad/ocap-api:main
          envFrom:
            - secretRef:
                name: ocap-secrets
            - configMapRef:
                name: config-data
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ocap-secrets
                  key: REDIS_PASSWORD
            - name: API_HOST
              value: 0.0.0.0
            - name: DEMO
              value: 'false'
            - name: NODE_ENV
              value: 'production'
            - name: LOGGER_LEVEL
              value: 'warn'
            - name: ADMIN_PASSWORD_RESET
              value: 'true'
            - name: LOG_LEVEL
              value: 'info'
            - name: DB_URI
              value: '$DB_URI'
            - name: DB_HOST
              value: 'postgres-s'
            - name: DB_TYPE
              value: 'postgres'
            - name: REDIS_HOST
              value: 'redis'
            - name: REDIS_PORT
              value: '6379'
            - name: OLAP_HOST
              value: 'olap'
            - name: OLAP_PORT
              value: '8080'
            - name: GITHUB_CALLBACK_URL
              value: '<your api domain>/api/auth/github/callback'
            - name: DINGTALK_REDIRECT_URL
              value: '<your api domain>/api/auth/dingtalk/callback'
            - name: FEISHU_REDIRECT_URL
              value: '<your api domain>/api/auth/feishu/callback'
            - name: FEISHU_APP_TYPE
              value: 'internal'
            - name: jwtExpiresIn
              value: '1h'
            - name: jwtRefreshExpiresIn
              value: '7d'
          ports:
            - containerPort: 3000
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ocap-webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ocap-webapp
  template:
    metadata:
      labels:
        app: ocap-webapp
    spec:
      containers:
        - name: ocap-webapp
          image: registry.cn-hangzhou.aliyuncs.com/metad/ocap-webapp:main
          ports:
            - containerPort: 80
              protocol: TCP
          envFrom:
            - configMapRef:
                name: config-data
          env:
            - name: ENABLE_LOCAL_AGENT
              value: 'false'
            - name: API_BASE_URL
              value: "https://dev-api.mtda.cloud"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ocap-olap
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ocap-olap
  template:
    metadata:
      labels:
        app: ocap-olap
    spec:
      restartPolicy: Always
      containers:
        - name: ocap-olap
          image: metadc/metad-olap:1.0.0
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: OLAP_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ocap-secrets
                  key: REDIS_PASSWORD
            - name: OLAP_REDIS_HOST
              value: 'redis'
            - name: OLAP_REDIS_PORT
              value: '6379'
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: local
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ocap-db-pv
  labels:
    type: local
spec:
  storageClassName: local-storage
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ocap-db-pvc
spec:
  storageClassName: "local-storage"
  volumeName: ocap-db-pv
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-s
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: dev-adminer
spec:
  type: ClusterIP
  selector:
    app: dev-adminer
  ports:
    - protocol: TCP
      port: 8085
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redisinsight
spec:
  type: ClusterIP
  selector:
    app: redisinsight
  ports:
    - protocol: TCP
      port: 8001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: config-data
                  key: DB_USER
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: config-data
                  key: DB_NAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ocap-secrets
                  key: DB_PASS
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb-1
      volumes:
        - name: postgredb-1
          persistentVolumeClaim:
            claimName: ocap-db-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:6
          imagePullPolicy: Always
          ports:
            - containerPort: 6379
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ocap-secrets
                  key: REDIS_PASSWORD
          command:
            - redis-server
          args:
            - --requirepass
            - $(REDIS_PASSWORD)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redisinsight-deployment
spec:
  selector:
    matchLabels:
      app: redisinsight
  replicas: 1
  template:
    metadata:
      labels:
        app: redisinsight
    spec:
      containers:
        - name: redisinsight
          image: redislabs/redisinsight:1.11.1
          imagePullPolicy: Always
          ports:
            - containerPort: 8001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-adminer
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: dev-adminer
  template:
    metadata:
      labels:
        app: dev-adminer
    spec:
      containers:
        - name: adminer
          image: adminer:latest
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-data
data:
  API_BASE_URL: "https://dev-api.mtda.cloud"
  CLIENT_BASE_URL: "https://dev.mtda.cloud"
  DB_USER: "postgres"
  DB_NAME: "ocap"
  DB_PORT: "5432"
